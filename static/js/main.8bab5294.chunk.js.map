{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/RadioBtn.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","CardsArray","robots","map","item","Error","SearchBox","searchInput","className","type","placeholder","onChange","RadioBtn","radioSelect","name","value","onClick","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","console","log","this","setState","err","Component","App","onSearchInput","event","searchfield","target","onRadioSelect","radioBtn","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTA2BeA,EAxBE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACWC,KAAI,SAACC,GAEvB,MAAM,IAAIC,MAAM,YAcxB,OACI,eAAC,WAAD,WACKJ,EADL,QCJOK,G,MAdG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAChB,OACI,qBAAKC,UAAY,MAAjB,SACI,uBACIA,UAAY,8BACZC,KAAO,SACPC,YAAc,gBACdC,SAAYJ,QCGbK,EAXE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEf,OACI,sBAAKL,UAAY,gBAAjB,UACI,uBAAOA,UAAY,MAAMC,KAAK,QAAQK,KAAK,SAASC,MAAM,OAAOC,QAAWH,IADhF,iBAC4G,uBACxG,uBAAOL,UAAY,MAAMC,KAAK,QAAQK,KAAK,SAASC,MAAM,WAAWC,QAAWH,IAFpF,qBAEoH,uBAChH,uBAAOL,UAAY,MAAMC,KAAK,QAAQK,KAAK,SAASC,MAAM,QAAQC,QAAWH,IAHjF,kBAG8G,2BCQvGI,EAdA,SAACC,GAQZ,OACI,qBAAKC,MAPK,CACVC,UAAW,SACXC,OAAQ,kCACRC,OAAO,UAIP,SACKJ,EAAMK,YCcJC,E,kDAvBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,UAAS,GAEbC,QAAQC,IAAIV,EAAMK,UALJ,E,qDASlB,WACII,QAAQC,IAAI,UACZC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WAEI,OADcG,KAAKJ,MAAZM,IAEI,yDAEJF,KAAKX,MAAMK,a,GApBCS,aC6EZC,E,kDArEX,WAAYf,GAAO,IAAD,6BACdS,QAAQC,IAAIV,IACZ,gBAoBJgB,cAAgB,SAACC,GACb,EAAKL,SAAS,CAACM,YAAYD,EAAME,OAAOtB,SAvB1B,EA0BlBuB,cAAgB,SAACH,GACb,EAAKL,SAAS,CAACS,SAASJ,EAAME,OAAOtB,QACrCY,QAAQC,IAAIO,EAAME,OAAOtB,QAzBzB,EAAKU,MAAQ,CACTvB,OAAQ,GACRkC,YAAa,GACbG,SAAS,QANC,E,qDAUlB,WAAoB,IAAD,OAEfC,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKd,SAAS,CAAC5B,OAAO0C,S,oBAclC,WACI,MAAwCf,KAAKJ,MAAtCvB,EAAP,EAAOA,OAAQkC,EAAf,EAAeA,YAAaG,EAA5B,EAA4BA,SACtBM,EAAiB3C,EAAO4C,QAAO,SAAC1C,GAClC,OAAOA,EAAKmC,GAAUQ,cAAcC,SAASZ,EAAYW,kBAI7D,OAAqB,IAAlB7C,EAAO+C,OACC,4CAGH,sBAAKzC,UAAY,KAAjB,UAEI,oBAAIA,UAAY,KAAhB,wBACA,sBAAKA,UAAY,KAAjB,UACI,cAAC,EAAD,CAAWD,YAAesB,KAAKK,gBAC/B,cAAC,EAAD,CAAUrB,YAAegB,KAAKS,mBASlC,cAAC,EAAD,UACI,cAAC,EAAD,UAEI,cAAC,EAAD,CAAUpC,OAAU2C,e,GA5D9Bb,aCGHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8bab5294.chunk.js","sourcesContent":["import React, {Fragment} from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    const CardsArray = robots.map((item) => {\r\n        if(true){\r\n            throw new Error(\"Noooo\");\r\n        }\r\n\r\n        return (\r\n            <Card\r\n                key = {item.id}\r\n                id = {item.id} \r\n                name = {item.name}\r\n                username = {item.username}\r\n                email = {item.email}\r\n                \r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <Fragment>\r\n            {CardsArray};\r\n        </Fragment>  \r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './SearchBox.css'\r\n\r\nconst SearchBox = ({searchInput}) => {\r\n    return(\r\n        <div className = 'ma3'>\r\n            <input\r\n                className = 'pa3 ba br3 bg-lightest-blue'\r\n                type = 'search'\r\n                placeholder = 'search robots'\r\n                onChange = {searchInput}\r\n\r\n            />\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst RadioBtn = ({radioSelect}) => {\r\n\r\n    return(\r\n        <div className = \"tl light-blue\">\r\n            <input className = \"ma2\" type=\"radio\" name=\"option\" value=\"name\" onClick = {radioSelect}/>Search by name<br/>\r\n            <input className = \"ma2\" type=\"radio\" name=\"option\" value=\"username\" onClick = {radioSelect}/>Search by username<br/>\r\n            <input className = \"ma2\" type=\"radio\" name=\"option\" value=\"email\" onClick = {radioSelect}/>Search by email<br/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioBtn;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    //style is always in {}\r\n    const style = {\r\n        overflowY: 'scroll',\r\n        border: '5px solid rgba(255,255,255,0.1)',\r\n        height:'1000px'\r\n    };\r\n\r\n    return(\r\n        <div style = {style}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            hasError:false\r\n        }\r\n        console.log(props.children);\r\n    }\r\n\r\n    //like try catch\r\n    componentDidCatch(){\r\n        console.log(\"reeeee\")\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render(){\r\n        const {err} = this.state;\r\n        if (err){\r\n            return <h1>Oooops. There is error.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport './App.css'\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport RadioBtn from '../components/RadioBtn';\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n// import {robots} from './robots'\r\n\r\nclass App extends Component{\r\n    constructor(props){\r\n        console.log(props)\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '',\r\n            radioBtn:'name'        }\r\n    }\r\n\r\n    //lifecycle\r\n    componentDidMount(){\r\n        //fetch\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(users => {\r\n                this.setState({robots:users})\r\n            })\r\n    }\r\n\r\n\r\n    onSearchInput = (event) => {\r\n        this.setState({searchfield:event.target.value});\r\n    }\r\n\r\n    onRadioSelect = (event) => {\r\n        this.setState({radioBtn:event.target.value});\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    render(){\r\n        const {robots, searchfield, radioBtn} = this.state;\r\n        const filteredRobots = robots.filter((item) => {\r\n            return item[radioBtn].toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        //loader (using fetch)\r\n        if(robots.length === 0){\r\n            return <h1>Loading...</h1>;\r\n        }else{\r\n            return(\r\n                <div className = \"tc\">\r\n                    \r\n                    <h1 className = 'f1'>Robofriens</h1>\r\n                    <div className = \"tc\">\r\n                        <SearchBox searchInput = {this.onSearchInput}/>\r\n                        <RadioBtn radioSelect = {this.onRadioSelect}/>\r\n                    </div>\r\n\r\n                    {/* Component can be also wrapper like Scroll, */}\r\n                    {/* and can have 'props'. If component has NO children props */}\r\n                    {/* is empty, if has children like scroll than you get something like this: */}\r\n                    {/* {children: {…}} */}\r\n                        {/* children: {$$typeof: Symbol(react.element), key: null, ref: null, props: {…}, type: ƒ, …} */}\r\n                        {/* __proto__: Object */}\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n\r\n                            <CardList robots = {filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}